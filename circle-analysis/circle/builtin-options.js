"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.unionListToBuiltinOptions = exports.unionToBuiltinOptions = exports.BuiltinOptions = void 0;
var abs_options_1 = require("../circle/abs-options");
var add_n_options_1 = require("../circle/add-n-options");
var add_options_1 = require("../circle/add-options");
var arg_max_options_1 = require("../circle/arg-max-options");
var arg_min_options_1 = require("../circle/arg-min-options");
var b_c_q_fully_connected_options_1 = require("../circle/b-c-q-fully-connected-options");
var b_c_q_gather_options_1 = require("../circle/b-c-q-gather-options");
var batch_mat_mul_options_1 = require("../circle/batch-mat-mul-options");
var batch_to_space_n_d_options_1 = require("../circle/batch-to-space-n-d-options");
var bidirectional_sequence_l_s_t_m_options_1 = require("../circle/bidirectional-sequence-l-s-t-m-options");
var bidirectional_sequence_r_n_n_options_1 = require("../circle/bidirectional-sequence-r-n-n-options");
var call_options_1 = require("../circle/call-options");
var cast_options_1 = require("../circle/cast-options");
var concat_embeddings_options_1 = require("../circle/concat-embeddings-options");
var concatenation_options_1 = require("../circle/concatenation-options");
var conv2_d_options_1 = require("../circle/conv2-d-options");
var cos_options_1 = require("../circle/cos-options");
var densify_options_1 = require("../circle/densify-options");
var depth_to_space_options_1 = require("../circle/depth-to-space-options");
var depthwise_conv2_d_options_1 = require("../circle/depthwise-conv2-d-options");
var dequantize_options_1 = require("../circle/dequantize-options");
var div_options_1 = require("../circle/div-options");
var embedding_lookup_sparse_options_1 = require("../circle/embedding-lookup-sparse-options");
var equal_options_1 = require("../circle/equal-options");
var exp_options_1 = require("../circle/exp-options");
var expand_dims_options_1 = require("../circle/expand-dims-options");
var fake_quant_options_1 = require("../circle/fake-quant-options");
var fill_options_1 = require("../circle/fill-options");
var floor_div_options_1 = require("../circle/floor-div-options");
var floor_mod_options_1 = require("../circle/floor-mod-options");
var fully_connected_options_1 = require("../circle/fully-connected-options");
var gather_nd_options_1 = require("../circle/gather-nd-options");
var gather_options_1 = require("../circle/gather-options");
var greater_equal_options_1 = require("../circle/greater-equal-options");
var greater_options_1 = require("../circle/greater-options");
var hard_swish_options_1 = require("../circle/hard-swish-options");
var if_options_1 = require("../circle/if-options");
var instance_norm_options_1 = require("../circle/instance-norm-options");
var l2_norm_options_1 = require("../circle/l2-norm-options");
var l_s_h_projection_options_1 = require("../circle/l-s-h-projection-options");
var l_s_t_m_options_1 = require("../circle/l-s-t-m-options");
var leaky_relu_options_1 = require("../circle/leaky-relu-options");
var less_equal_options_1 = require("../circle/less-equal-options");
var less_options_1 = require("../circle/less-options");
var local_response_normalization_options_1 = require("../circle/local-response-normalization-options");
var log_softmax_options_1 = require("../circle/log-softmax-options");
var logical_and_options_1 = require("../circle/logical-and-options");
var logical_not_options_1 = require("../circle/logical-not-options");
var logical_or_options_1 = require("../circle/logical-or-options");
var matrix_diag_options_1 = require("../circle/matrix-diag-options");
var matrix_set_diag_options_1 = require("../circle/matrix-set-diag-options");
var maximum_minimum_options_1 = require("../circle/maximum-minimum-options");
var mirror_pad_options_1 = require("../circle/mirror-pad-options");
var mul_options_1 = require("../circle/mul-options");
var neg_options_1 = require("../circle/neg-options");
var non_max_suppression_v4_options_1 = require("../circle/non-max-suppression-v4-options");
var non_max_suppression_v5_options_1 = require("../circle/non-max-suppression-v5-options");
var not_equal_options_1 = require("../circle/not-equal-options");
var one_hot_options_1 = require("../circle/one-hot-options");
var pack_options_1 = require("../circle/pack-options");
var pad_options_1 = require("../circle/pad-options");
var pad_v2_options_1 = require("../circle/pad-v2-options");
var pool2_d_options_1 = require("../circle/pool2-d-options");
var pow_options_1 = require("../circle/pow-options");
var quantize_options_1 = require("../circle/quantize-options");
var r_n_n_options_1 = require("../circle/r-n-n-options");
var range_options_1 = require("../circle/range-options");
var rank_options_1 = require("../circle/rank-options");
var reducer_options_1 = require("../circle/reducer-options");
var reshape_options_1 = require("../circle/reshape-options");
var resize_bilinear_options_1 = require("../circle/resize-bilinear-options");
var resize_nearest_neighbor_options_1 = require("../circle/resize-nearest-neighbor-options");
var reverse_sequence_options_1 = require("../circle/reverse-sequence-options");
var reverse_v2_options_1 = require("../circle/reverse-v2-options");
var s_v_d_f_options_1 = require("../circle/s-v-d-f-options");
var scatter_nd_options_1 = require("../circle/scatter-nd-options");
var segment_sum_options_1 = require("../circle/segment-sum-options");
var select_options_1 = require("../circle/select-options");
var select_v2_options_1 = require("../circle/select-v2-options");
var sequence_r_n_n_options_1 = require("../circle/sequence-r-n-n-options");
var shape_options_1 = require("../circle/shape-options");
var skip_gram_options_1 = require("../circle/skip-gram-options");
var slice_options_1 = require("../circle/slice-options");
var softmax_options_1 = require("../circle/softmax-options");
var space_to_batch_n_d_options_1 = require("../circle/space-to-batch-n-d-options");
var space_to_depth_options_1 = require("../circle/space-to-depth-options");
var sparse_to_dense_options_1 = require("../circle/sparse-to-dense-options");
var split_options_1 = require("../circle/split-options");
var split_v_options_1 = require("../circle/split-v-options");
var square_options_1 = require("../circle/square-options");
var squared_difference_options_1 = require("../circle/squared-difference-options");
var squeeze_options_1 = require("../circle/squeeze-options");
var strided_slice_options_1 = require("../circle/strided-slice-options");
var sub_options_1 = require("../circle/sub-options");
var tile_options_1 = require("../circle/tile-options");
var top_k_v2_options_1 = require("../circle/top-k-v2-options");
var transpose_conv_options_1 = require("../circle/transpose-conv-options");
var transpose_options_1 = require("../circle/transpose-options");
var unidirectional_sequence_l_s_t_m_options_1 = require("../circle/unidirectional-sequence-l-s-t-m-options");
var unique_options_1 = require("../circle/unique-options");
var unpack_options_1 = require("../circle/unpack-options");
var where_options_1 = require("../circle/where-options");
var while_options_1 = require("../circle/while-options");
var zeros_like_options_1 = require("../circle/zeros-like-options");
var BuiltinOptions;
(function (BuiltinOptions) {
    BuiltinOptions[BuiltinOptions["NONE"] = 0] = "NONE";
    BuiltinOptions[BuiltinOptions["Conv2DOptions"] = 1] = "Conv2DOptions";
    BuiltinOptions[BuiltinOptions["DepthwiseConv2DOptions"] = 2] = "DepthwiseConv2DOptions";
    BuiltinOptions[BuiltinOptions["ConcatEmbeddingsOptions"] = 3] = "ConcatEmbeddingsOptions";
    BuiltinOptions[BuiltinOptions["LSHProjectionOptions"] = 4] = "LSHProjectionOptions";
    BuiltinOptions[BuiltinOptions["Pool2DOptions"] = 5] = "Pool2DOptions";
    BuiltinOptions[BuiltinOptions["SVDFOptions"] = 6] = "SVDFOptions";
    BuiltinOptions[BuiltinOptions["RNNOptions"] = 7] = "RNNOptions";
    BuiltinOptions[BuiltinOptions["FullyConnectedOptions"] = 8] = "FullyConnectedOptions";
    BuiltinOptions[BuiltinOptions["SoftmaxOptions"] = 9] = "SoftmaxOptions";
    BuiltinOptions[BuiltinOptions["ConcatenationOptions"] = 10] = "ConcatenationOptions";
    BuiltinOptions[BuiltinOptions["AddOptions"] = 11] = "AddOptions";
    BuiltinOptions[BuiltinOptions["L2NormOptions"] = 12] = "L2NormOptions";
    BuiltinOptions[BuiltinOptions["LocalResponseNormalizationOptions"] = 13] = "LocalResponseNormalizationOptions";
    BuiltinOptions[BuiltinOptions["LSTMOptions"] = 14] = "LSTMOptions";
    BuiltinOptions[BuiltinOptions["ResizeBilinearOptions"] = 15] = "ResizeBilinearOptions";
    BuiltinOptions[BuiltinOptions["CallOptions"] = 16] = "CallOptions";
    BuiltinOptions[BuiltinOptions["ReshapeOptions"] = 17] = "ReshapeOptions";
    BuiltinOptions[BuiltinOptions["SkipGramOptions"] = 18] = "SkipGramOptions";
    BuiltinOptions[BuiltinOptions["SpaceToDepthOptions"] = 19] = "SpaceToDepthOptions";
    BuiltinOptions[BuiltinOptions["EmbeddingLookupSparseOptions"] = 20] = "EmbeddingLookupSparseOptions";
    BuiltinOptions[BuiltinOptions["MulOptions"] = 21] = "MulOptions";
    BuiltinOptions[BuiltinOptions["PadOptions"] = 22] = "PadOptions";
    BuiltinOptions[BuiltinOptions["GatherOptions"] = 23] = "GatherOptions";
    BuiltinOptions[BuiltinOptions["BatchToSpaceNDOptions"] = 24] = "BatchToSpaceNDOptions";
    BuiltinOptions[BuiltinOptions["SpaceToBatchNDOptions"] = 25] = "SpaceToBatchNDOptions";
    BuiltinOptions[BuiltinOptions["TransposeOptions"] = 26] = "TransposeOptions";
    BuiltinOptions[BuiltinOptions["ReducerOptions"] = 27] = "ReducerOptions";
    BuiltinOptions[BuiltinOptions["SubOptions"] = 28] = "SubOptions";
    BuiltinOptions[BuiltinOptions["DivOptions"] = 29] = "DivOptions";
    BuiltinOptions[BuiltinOptions["SqueezeOptions"] = 30] = "SqueezeOptions";
    BuiltinOptions[BuiltinOptions["SequenceRNNOptions"] = 31] = "SequenceRNNOptions";
    BuiltinOptions[BuiltinOptions["StridedSliceOptions"] = 32] = "StridedSliceOptions";
    BuiltinOptions[BuiltinOptions["ExpOptions"] = 33] = "ExpOptions";
    BuiltinOptions[BuiltinOptions["TopKV2Options"] = 34] = "TopKV2Options";
    BuiltinOptions[BuiltinOptions["SplitOptions"] = 35] = "SplitOptions";
    BuiltinOptions[BuiltinOptions["LogSoftmaxOptions"] = 36] = "LogSoftmaxOptions";
    BuiltinOptions[BuiltinOptions["CastOptions"] = 37] = "CastOptions";
    BuiltinOptions[BuiltinOptions["DequantizeOptions"] = 38] = "DequantizeOptions";
    BuiltinOptions[BuiltinOptions["MaximumMinimumOptions"] = 39] = "MaximumMinimumOptions";
    BuiltinOptions[BuiltinOptions["ArgMaxOptions"] = 40] = "ArgMaxOptions";
    BuiltinOptions[BuiltinOptions["LessOptions"] = 41] = "LessOptions";
    BuiltinOptions[BuiltinOptions["NegOptions"] = 42] = "NegOptions";
    BuiltinOptions[BuiltinOptions["PadV2Options"] = 43] = "PadV2Options";
    BuiltinOptions[BuiltinOptions["GreaterOptions"] = 44] = "GreaterOptions";
    BuiltinOptions[BuiltinOptions["GreaterEqualOptions"] = 45] = "GreaterEqualOptions";
    BuiltinOptions[BuiltinOptions["LessEqualOptions"] = 46] = "LessEqualOptions";
    BuiltinOptions[BuiltinOptions["SelectOptions"] = 47] = "SelectOptions";
    BuiltinOptions[BuiltinOptions["SliceOptions"] = 48] = "SliceOptions";
    BuiltinOptions[BuiltinOptions["TransposeConvOptions"] = 49] = "TransposeConvOptions";
    BuiltinOptions[BuiltinOptions["SparseToDenseOptions"] = 50] = "SparseToDenseOptions";
    BuiltinOptions[BuiltinOptions["TileOptions"] = 51] = "TileOptions";
    BuiltinOptions[BuiltinOptions["ExpandDimsOptions"] = 52] = "ExpandDimsOptions";
    BuiltinOptions[BuiltinOptions["EqualOptions"] = 53] = "EqualOptions";
    BuiltinOptions[BuiltinOptions["NotEqualOptions"] = 54] = "NotEqualOptions";
    BuiltinOptions[BuiltinOptions["ShapeOptions"] = 55] = "ShapeOptions";
    BuiltinOptions[BuiltinOptions["PowOptions"] = 56] = "PowOptions";
    BuiltinOptions[BuiltinOptions["ArgMinOptions"] = 57] = "ArgMinOptions";
    BuiltinOptions[BuiltinOptions["FakeQuantOptions"] = 58] = "FakeQuantOptions";
    BuiltinOptions[BuiltinOptions["PackOptions"] = 59] = "PackOptions";
    BuiltinOptions[BuiltinOptions["LogicalOrOptions"] = 60] = "LogicalOrOptions";
    BuiltinOptions[BuiltinOptions["OneHotOptions"] = 61] = "OneHotOptions";
    BuiltinOptions[BuiltinOptions["LogicalAndOptions"] = 62] = "LogicalAndOptions";
    BuiltinOptions[BuiltinOptions["LogicalNotOptions"] = 63] = "LogicalNotOptions";
    BuiltinOptions[BuiltinOptions["UnpackOptions"] = 64] = "UnpackOptions";
    BuiltinOptions[BuiltinOptions["FloorDivOptions"] = 65] = "FloorDivOptions";
    BuiltinOptions[BuiltinOptions["SquareOptions"] = 66] = "SquareOptions";
    BuiltinOptions[BuiltinOptions["ZerosLikeOptions"] = 67] = "ZerosLikeOptions";
    BuiltinOptions[BuiltinOptions["FillOptions"] = 68] = "FillOptions";
    BuiltinOptions[BuiltinOptions["BidirectionalSequenceLSTMOptions"] = 69] = "BidirectionalSequenceLSTMOptions";
    BuiltinOptions[BuiltinOptions["BidirectionalSequenceRNNOptions"] = 70] = "BidirectionalSequenceRNNOptions";
    BuiltinOptions[BuiltinOptions["UnidirectionalSequenceLSTMOptions"] = 71] = "UnidirectionalSequenceLSTMOptions";
    BuiltinOptions[BuiltinOptions["FloorModOptions"] = 72] = "FloorModOptions";
    BuiltinOptions[BuiltinOptions["RangeOptions"] = 73] = "RangeOptions";
    BuiltinOptions[BuiltinOptions["ResizeNearestNeighborOptions"] = 74] = "ResizeNearestNeighborOptions";
    BuiltinOptions[BuiltinOptions["LeakyReluOptions"] = 75] = "LeakyReluOptions";
    BuiltinOptions[BuiltinOptions["SquaredDifferenceOptions"] = 76] = "SquaredDifferenceOptions";
    BuiltinOptions[BuiltinOptions["MirrorPadOptions"] = 77] = "MirrorPadOptions";
    BuiltinOptions[BuiltinOptions["AbsOptions"] = 78] = "AbsOptions";
    BuiltinOptions[BuiltinOptions["SplitVOptions"] = 79] = "SplitVOptions";
    BuiltinOptions[BuiltinOptions["UniqueOptions"] = 80] = "UniqueOptions";
    BuiltinOptions[BuiltinOptions["ReverseV2Options"] = 81] = "ReverseV2Options";
    BuiltinOptions[BuiltinOptions["AddNOptions"] = 82] = "AddNOptions";
    BuiltinOptions[BuiltinOptions["GatherNdOptions"] = 83] = "GatherNdOptions";
    BuiltinOptions[BuiltinOptions["CosOptions"] = 84] = "CosOptions";
    BuiltinOptions[BuiltinOptions["WhereOptions"] = 85] = "WhereOptions";
    BuiltinOptions[BuiltinOptions["RankOptions"] = 86] = "RankOptions";
    BuiltinOptions[BuiltinOptions["ReverseSequenceOptions"] = 87] = "ReverseSequenceOptions";
    BuiltinOptions[BuiltinOptions["MatrixDiagOptions"] = 88] = "MatrixDiagOptions";
    BuiltinOptions[BuiltinOptions["QuantizeOptions"] = 89] = "QuantizeOptions";
    BuiltinOptions[BuiltinOptions["MatrixSetDiagOptions"] = 90] = "MatrixSetDiagOptions";
    BuiltinOptions[BuiltinOptions["HardSwishOptions"] = 91] = "HardSwishOptions";
    BuiltinOptions[BuiltinOptions["IfOptions"] = 92] = "IfOptions";
    BuiltinOptions[BuiltinOptions["WhileOptions"] = 93] = "WhileOptions";
    BuiltinOptions[BuiltinOptions["DepthToSpaceOptions"] = 94] = "DepthToSpaceOptions";
    BuiltinOptions[BuiltinOptions["NonMaxSuppressionV4Options"] = 95] = "NonMaxSuppressionV4Options";
    BuiltinOptions[BuiltinOptions["NonMaxSuppressionV5Options"] = 96] = "NonMaxSuppressionV5Options";
    BuiltinOptions[BuiltinOptions["ScatterNdOptions"] = 97] = "ScatterNdOptions";
    BuiltinOptions[BuiltinOptions["SelectV2Options"] = 98] = "SelectV2Options";
    BuiltinOptions[BuiltinOptions["DensifyOptions"] = 99] = "DensifyOptions";
    BuiltinOptions[BuiltinOptions["SegmentSumOptions"] = 100] = "SegmentSumOptions";
    BuiltinOptions[BuiltinOptions["BatchMatMulOptions"] = 101] = "BatchMatMulOptions";
    BuiltinOptions[BuiltinOptions["BCQGatherOptions"] = 252] = "BCQGatherOptions";
    BuiltinOptions[BuiltinOptions["BCQFullyConnectedOptions"] = 253] = "BCQFullyConnectedOptions";
    BuiltinOptions[BuiltinOptions["InstanceNormOptions"] = 254] = "InstanceNormOptions";
})(BuiltinOptions = exports.BuiltinOptions || (exports.BuiltinOptions = {}));
function unionToBuiltinOptions(type, accessor) {
    switch (BuiltinOptions[type]) {
        case 'NONE': return null;
        case 'Conv2DOptions': return accessor(new conv2_d_options_1.Conv2DOptions());
        case 'DepthwiseConv2DOptions': return accessor(new depthwise_conv2_d_options_1.DepthwiseConv2DOptions());
        case 'ConcatEmbeddingsOptions': return accessor(new concat_embeddings_options_1.ConcatEmbeddingsOptions());
        case 'LSHProjectionOptions': return accessor(new l_s_h_projection_options_1.LSHProjectionOptions());
        case 'Pool2DOptions': return accessor(new pool2_d_options_1.Pool2DOptions());
        case 'SVDFOptions': return accessor(new s_v_d_f_options_1.SVDFOptions());
        case 'RNNOptions': return accessor(new r_n_n_options_1.RNNOptions());
        case 'FullyConnectedOptions': return accessor(new fully_connected_options_1.FullyConnectedOptions());
        case 'SoftmaxOptions': return accessor(new softmax_options_1.SoftmaxOptions());
        case 'ConcatenationOptions': return accessor(new concatenation_options_1.ConcatenationOptions());
        case 'AddOptions': return accessor(new add_options_1.AddOptions());
        case 'L2NormOptions': return accessor(new l2_norm_options_1.L2NormOptions());
        case 'LocalResponseNormalizationOptions': return accessor(new local_response_normalization_options_1.LocalResponseNormalizationOptions());
        case 'LSTMOptions': return accessor(new l_s_t_m_options_1.LSTMOptions());
        case 'ResizeBilinearOptions': return accessor(new resize_bilinear_options_1.ResizeBilinearOptions());
        case 'CallOptions': return accessor(new call_options_1.CallOptions());
        case 'ReshapeOptions': return accessor(new reshape_options_1.ReshapeOptions());
        case 'SkipGramOptions': return accessor(new skip_gram_options_1.SkipGramOptions());
        case 'SpaceToDepthOptions': return accessor(new space_to_depth_options_1.SpaceToDepthOptions());
        case 'EmbeddingLookupSparseOptions': return accessor(new embedding_lookup_sparse_options_1.EmbeddingLookupSparseOptions());
        case 'MulOptions': return accessor(new mul_options_1.MulOptions());
        case 'PadOptions': return accessor(new pad_options_1.PadOptions());
        case 'GatherOptions': return accessor(new gather_options_1.GatherOptions());
        case 'BatchToSpaceNDOptions': return accessor(new batch_to_space_n_d_options_1.BatchToSpaceNDOptions());
        case 'SpaceToBatchNDOptions': return accessor(new space_to_batch_n_d_options_1.SpaceToBatchNDOptions());
        case 'TransposeOptions': return accessor(new transpose_options_1.TransposeOptions());
        case 'ReducerOptions': return accessor(new reducer_options_1.ReducerOptions());
        case 'SubOptions': return accessor(new sub_options_1.SubOptions());
        case 'DivOptions': return accessor(new div_options_1.DivOptions());
        case 'SqueezeOptions': return accessor(new squeeze_options_1.SqueezeOptions());
        case 'SequenceRNNOptions': return accessor(new sequence_r_n_n_options_1.SequenceRNNOptions());
        case 'StridedSliceOptions': return accessor(new strided_slice_options_1.StridedSliceOptions());
        case 'ExpOptions': return accessor(new exp_options_1.ExpOptions());
        case 'TopKV2Options': return accessor(new top_k_v2_options_1.TopKV2Options());
        case 'SplitOptions': return accessor(new split_options_1.SplitOptions());
        case 'LogSoftmaxOptions': return accessor(new log_softmax_options_1.LogSoftmaxOptions());
        case 'CastOptions': return accessor(new cast_options_1.CastOptions());
        case 'DequantizeOptions': return accessor(new dequantize_options_1.DequantizeOptions());
        case 'MaximumMinimumOptions': return accessor(new maximum_minimum_options_1.MaximumMinimumOptions());
        case 'ArgMaxOptions': return accessor(new arg_max_options_1.ArgMaxOptions());
        case 'LessOptions': return accessor(new less_options_1.LessOptions());
        case 'NegOptions': return accessor(new neg_options_1.NegOptions());
        case 'PadV2Options': return accessor(new pad_v2_options_1.PadV2Options());
        case 'GreaterOptions': return accessor(new greater_options_1.GreaterOptions());
        case 'GreaterEqualOptions': return accessor(new greater_equal_options_1.GreaterEqualOptions());
        case 'LessEqualOptions': return accessor(new less_equal_options_1.LessEqualOptions());
        case 'SelectOptions': return accessor(new select_options_1.SelectOptions());
        case 'SliceOptions': return accessor(new slice_options_1.SliceOptions());
        case 'TransposeConvOptions': return accessor(new transpose_conv_options_1.TransposeConvOptions());
        case 'SparseToDenseOptions': return accessor(new sparse_to_dense_options_1.SparseToDenseOptions());
        case 'TileOptions': return accessor(new tile_options_1.TileOptions());
        case 'ExpandDimsOptions': return accessor(new expand_dims_options_1.ExpandDimsOptions());
        case 'EqualOptions': return accessor(new equal_options_1.EqualOptions());
        case 'NotEqualOptions': return accessor(new not_equal_options_1.NotEqualOptions());
        case 'ShapeOptions': return accessor(new shape_options_1.ShapeOptions());
        case 'PowOptions': return accessor(new pow_options_1.PowOptions());
        case 'ArgMinOptions': return accessor(new arg_min_options_1.ArgMinOptions());
        case 'FakeQuantOptions': return accessor(new fake_quant_options_1.FakeQuantOptions());
        case 'PackOptions': return accessor(new pack_options_1.PackOptions());
        case 'LogicalOrOptions': return accessor(new logical_or_options_1.LogicalOrOptions());
        case 'OneHotOptions': return accessor(new one_hot_options_1.OneHotOptions());
        case 'LogicalAndOptions': return accessor(new logical_and_options_1.LogicalAndOptions());
        case 'LogicalNotOptions': return accessor(new logical_not_options_1.LogicalNotOptions());
        case 'UnpackOptions': return accessor(new unpack_options_1.UnpackOptions());
        case 'FloorDivOptions': return accessor(new floor_div_options_1.FloorDivOptions());
        case 'SquareOptions': return accessor(new square_options_1.SquareOptions());
        case 'ZerosLikeOptions': return accessor(new zeros_like_options_1.ZerosLikeOptions());
        case 'FillOptions': return accessor(new fill_options_1.FillOptions());
        case 'BidirectionalSequenceLSTMOptions': return accessor(new bidirectional_sequence_l_s_t_m_options_1.BidirectionalSequenceLSTMOptions());
        case 'BidirectionalSequenceRNNOptions': return accessor(new bidirectional_sequence_r_n_n_options_1.BidirectionalSequenceRNNOptions());
        case 'UnidirectionalSequenceLSTMOptions': return accessor(new unidirectional_sequence_l_s_t_m_options_1.UnidirectionalSequenceLSTMOptions());
        case 'FloorModOptions': return accessor(new floor_mod_options_1.FloorModOptions());
        case 'RangeOptions': return accessor(new range_options_1.RangeOptions());
        case 'ResizeNearestNeighborOptions': return accessor(new resize_nearest_neighbor_options_1.ResizeNearestNeighborOptions());
        case 'LeakyReluOptions': return accessor(new leaky_relu_options_1.LeakyReluOptions());
        case 'SquaredDifferenceOptions': return accessor(new squared_difference_options_1.SquaredDifferenceOptions());
        case 'MirrorPadOptions': return accessor(new mirror_pad_options_1.MirrorPadOptions());
        case 'AbsOptions': return accessor(new abs_options_1.AbsOptions());
        case 'SplitVOptions': return accessor(new split_v_options_1.SplitVOptions());
        case 'UniqueOptions': return accessor(new unique_options_1.UniqueOptions());
        case 'ReverseV2Options': return accessor(new reverse_v2_options_1.ReverseV2Options());
        case 'AddNOptions': return accessor(new add_n_options_1.AddNOptions());
        case 'GatherNdOptions': return accessor(new gather_nd_options_1.GatherNdOptions());
        case 'CosOptions': return accessor(new cos_options_1.CosOptions());
        case 'WhereOptions': return accessor(new where_options_1.WhereOptions());
        case 'RankOptions': return accessor(new rank_options_1.RankOptions());
        case 'ReverseSequenceOptions': return accessor(new reverse_sequence_options_1.ReverseSequenceOptions());
        case 'MatrixDiagOptions': return accessor(new matrix_diag_options_1.MatrixDiagOptions());
        case 'QuantizeOptions': return accessor(new quantize_options_1.QuantizeOptions());
        case 'MatrixSetDiagOptions': return accessor(new matrix_set_diag_options_1.MatrixSetDiagOptions());
        case 'HardSwishOptions': return accessor(new hard_swish_options_1.HardSwishOptions());
        case 'IfOptions': return accessor(new if_options_1.IfOptions());
        case 'WhileOptions': return accessor(new while_options_1.WhileOptions());
        case 'DepthToSpaceOptions': return accessor(new depth_to_space_options_1.DepthToSpaceOptions());
        case 'NonMaxSuppressionV4Options': return accessor(new non_max_suppression_v4_options_1.NonMaxSuppressionV4Options());
        case 'NonMaxSuppressionV5Options': return accessor(new non_max_suppression_v5_options_1.NonMaxSuppressionV5Options());
        case 'ScatterNdOptions': return accessor(new scatter_nd_options_1.ScatterNdOptions());
        case 'SelectV2Options': return accessor(new select_v2_options_1.SelectV2Options());
        case 'DensifyOptions': return accessor(new densify_options_1.DensifyOptions());
        case 'SegmentSumOptions': return accessor(new segment_sum_options_1.SegmentSumOptions());
        case 'BatchMatMulOptions': return accessor(new batch_mat_mul_options_1.BatchMatMulOptions());
        case 'BCQGatherOptions': return accessor(new b_c_q_gather_options_1.BCQGatherOptions());
        case 'BCQFullyConnectedOptions': return accessor(new b_c_q_fully_connected_options_1.BCQFullyConnectedOptions());
        case 'InstanceNormOptions': return accessor(new instance_norm_options_1.InstanceNormOptions());
        default: return null;
    }
}
exports.unionToBuiltinOptions = unionToBuiltinOptions;
function unionListToBuiltinOptions(type, accessor, index) {
    switch (BuiltinOptions[type]) {
        case 'NONE': return null;
        case 'Conv2DOptions': return accessor(index, new conv2_d_options_1.Conv2DOptions());
        case 'DepthwiseConv2DOptions': return accessor(index, new depthwise_conv2_d_options_1.DepthwiseConv2DOptions());
        case 'ConcatEmbeddingsOptions': return accessor(index, new concat_embeddings_options_1.ConcatEmbeddingsOptions());
        case 'LSHProjectionOptions': return accessor(index, new l_s_h_projection_options_1.LSHProjectionOptions());
        case 'Pool2DOptions': return accessor(index, new pool2_d_options_1.Pool2DOptions());
        case 'SVDFOptions': return accessor(index, new s_v_d_f_options_1.SVDFOptions());
        case 'RNNOptions': return accessor(index, new r_n_n_options_1.RNNOptions());
        case 'FullyConnectedOptions': return accessor(index, new fully_connected_options_1.FullyConnectedOptions());
        case 'SoftmaxOptions': return accessor(index, new softmax_options_1.SoftmaxOptions());
        case 'ConcatenationOptions': return accessor(index, new concatenation_options_1.ConcatenationOptions());
        case 'AddOptions': return accessor(index, new add_options_1.AddOptions());
        case 'L2NormOptions': return accessor(index, new l2_norm_options_1.L2NormOptions());
        case 'LocalResponseNormalizationOptions': return accessor(index, new local_response_normalization_options_1.LocalResponseNormalizationOptions());
        case 'LSTMOptions': return accessor(index, new l_s_t_m_options_1.LSTMOptions());
        case 'ResizeBilinearOptions': return accessor(index, new resize_bilinear_options_1.ResizeBilinearOptions());
        case 'CallOptions': return accessor(index, new call_options_1.CallOptions());
        case 'ReshapeOptions': return accessor(index, new reshape_options_1.ReshapeOptions());
        case 'SkipGramOptions': return accessor(index, new skip_gram_options_1.SkipGramOptions());
        case 'SpaceToDepthOptions': return accessor(index, new space_to_depth_options_1.SpaceToDepthOptions());
        case 'EmbeddingLookupSparseOptions': return accessor(index, new embedding_lookup_sparse_options_1.EmbeddingLookupSparseOptions());
        case 'MulOptions': return accessor(index, new mul_options_1.MulOptions());
        case 'PadOptions': return accessor(index, new pad_options_1.PadOptions());
        case 'GatherOptions': return accessor(index, new gather_options_1.GatherOptions());
        case 'BatchToSpaceNDOptions': return accessor(index, new batch_to_space_n_d_options_1.BatchToSpaceNDOptions());
        case 'SpaceToBatchNDOptions': return accessor(index, new space_to_batch_n_d_options_1.SpaceToBatchNDOptions());
        case 'TransposeOptions': return accessor(index, new transpose_options_1.TransposeOptions());
        case 'ReducerOptions': return accessor(index, new reducer_options_1.ReducerOptions());
        case 'SubOptions': return accessor(index, new sub_options_1.SubOptions());
        case 'DivOptions': return accessor(index, new div_options_1.DivOptions());
        case 'SqueezeOptions': return accessor(index, new squeeze_options_1.SqueezeOptions());
        case 'SequenceRNNOptions': return accessor(index, new sequence_r_n_n_options_1.SequenceRNNOptions());
        case 'StridedSliceOptions': return accessor(index, new strided_slice_options_1.StridedSliceOptions());
        case 'ExpOptions': return accessor(index, new exp_options_1.ExpOptions());
        case 'TopKV2Options': return accessor(index, new top_k_v2_options_1.TopKV2Options());
        case 'SplitOptions': return accessor(index, new split_options_1.SplitOptions());
        case 'LogSoftmaxOptions': return accessor(index, new log_softmax_options_1.LogSoftmaxOptions());
        case 'CastOptions': return accessor(index, new cast_options_1.CastOptions());
        case 'DequantizeOptions': return accessor(index, new dequantize_options_1.DequantizeOptions());
        case 'MaximumMinimumOptions': return accessor(index, new maximum_minimum_options_1.MaximumMinimumOptions());
        case 'ArgMaxOptions': return accessor(index, new arg_max_options_1.ArgMaxOptions());
        case 'LessOptions': return accessor(index, new less_options_1.LessOptions());
        case 'NegOptions': return accessor(index, new neg_options_1.NegOptions());
        case 'PadV2Options': return accessor(index, new pad_v2_options_1.PadV2Options());
        case 'GreaterOptions': return accessor(index, new greater_options_1.GreaterOptions());
        case 'GreaterEqualOptions': return accessor(index, new greater_equal_options_1.GreaterEqualOptions());
        case 'LessEqualOptions': return accessor(index, new less_equal_options_1.LessEqualOptions());
        case 'SelectOptions': return accessor(index, new select_options_1.SelectOptions());
        case 'SliceOptions': return accessor(index, new slice_options_1.SliceOptions());
        case 'TransposeConvOptions': return accessor(index, new transpose_conv_options_1.TransposeConvOptions());
        case 'SparseToDenseOptions': return accessor(index, new sparse_to_dense_options_1.SparseToDenseOptions());
        case 'TileOptions': return accessor(index, new tile_options_1.TileOptions());
        case 'ExpandDimsOptions': return accessor(index, new expand_dims_options_1.ExpandDimsOptions());
        case 'EqualOptions': return accessor(index, new equal_options_1.EqualOptions());
        case 'NotEqualOptions': return accessor(index, new not_equal_options_1.NotEqualOptions());
        case 'ShapeOptions': return accessor(index, new shape_options_1.ShapeOptions());
        case 'PowOptions': return accessor(index, new pow_options_1.PowOptions());
        case 'ArgMinOptions': return accessor(index, new arg_min_options_1.ArgMinOptions());
        case 'FakeQuantOptions': return accessor(index, new fake_quant_options_1.FakeQuantOptions());
        case 'PackOptions': return accessor(index, new pack_options_1.PackOptions());
        case 'LogicalOrOptions': return accessor(index, new logical_or_options_1.LogicalOrOptions());
        case 'OneHotOptions': return accessor(index, new one_hot_options_1.OneHotOptions());
        case 'LogicalAndOptions': return accessor(index, new logical_and_options_1.LogicalAndOptions());
        case 'LogicalNotOptions': return accessor(index, new logical_not_options_1.LogicalNotOptions());
        case 'UnpackOptions': return accessor(index, new unpack_options_1.UnpackOptions());
        case 'FloorDivOptions': return accessor(index, new floor_div_options_1.FloorDivOptions());
        case 'SquareOptions': return accessor(index, new square_options_1.SquareOptions());
        case 'ZerosLikeOptions': return accessor(index, new zeros_like_options_1.ZerosLikeOptions());
        case 'FillOptions': return accessor(index, new fill_options_1.FillOptions());
        case 'BidirectionalSequenceLSTMOptions': return accessor(index, new bidirectional_sequence_l_s_t_m_options_1.BidirectionalSequenceLSTMOptions());
        case 'BidirectionalSequenceRNNOptions': return accessor(index, new bidirectional_sequence_r_n_n_options_1.BidirectionalSequenceRNNOptions());
        case 'UnidirectionalSequenceLSTMOptions': return accessor(index, new unidirectional_sequence_l_s_t_m_options_1.UnidirectionalSequenceLSTMOptions());
        case 'FloorModOptions': return accessor(index, new floor_mod_options_1.FloorModOptions());
        case 'RangeOptions': return accessor(index, new range_options_1.RangeOptions());
        case 'ResizeNearestNeighborOptions': return accessor(index, new resize_nearest_neighbor_options_1.ResizeNearestNeighborOptions());
        case 'LeakyReluOptions': return accessor(index, new leaky_relu_options_1.LeakyReluOptions());
        case 'SquaredDifferenceOptions': return accessor(index, new squared_difference_options_1.SquaredDifferenceOptions());
        case 'MirrorPadOptions': return accessor(index, new mirror_pad_options_1.MirrorPadOptions());
        case 'AbsOptions': return accessor(index, new abs_options_1.AbsOptions());
        case 'SplitVOptions': return accessor(index, new split_v_options_1.SplitVOptions());
        case 'UniqueOptions': return accessor(index, new unique_options_1.UniqueOptions());
        case 'ReverseV2Options': return accessor(index, new reverse_v2_options_1.ReverseV2Options());
        case 'AddNOptions': return accessor(index, new add_n_options_1.AddNOptions());
        case 'GatherNdOptions': return accessor(index, new gather_nd_options_1.GatherNdOptions());
        case 'CosOptions': return accessor(index, new cos_options_1.CosOptions());
        case 'WhereOptions': return accessor(index, new where_options_1.WhereOptions());
        case 'RankOptions': return accessor(index, new rank_options_1.RankOptions());
        case 'ReverseSequenceOptions': return accessor(index, new reverse_sequence_options_1.ReverseSequenceOptions());
        case 'MatrixDiagOptions': return accessor(index, new matrix_diag_options_1.MatrixDiagOptions());
        case 'QuantizeOptions': return accessor(index, new quantize_options_1.QuantizeOptions());
        case 'MatrixSetDiagOptions': return accessor(index, new matrix_set_diag_options_1.MatrixSetDiagOptions());
        case 'HardSwishOptions': return accessor(index, new hard_swish_options_1.HardSwishOptions());
        case 'IfOptions': return accessor(index, new if_options_1.IfOptions());
        case 'WhileOptions': return accessor(index, new while_options_1.WhileOptions());
        case 'DepthToSpaceOptions': return accessor(index, new depth_to_space_options_1.DepthToSpaceOptions());
        case 'NonMaxSuppressionV4Options': return accessor(index, new non_max_suppression_v4_options_1.NonMaxSuppressionV4Options());
        case 'NonMaxSuppressionV5Options': return accessor(index, new non_max_suppression_v5_options_1.NonMaxSuppressionV5Options());
        case 'ScatterNdOptions': return accessor(index, new scatter_nd_options_1.ScatterNdOptions());
        case 'SelectV2Options': return accessor(index, new select_v2_options_1.SelectV2Options());
        case 'DensifyOptions': return accessor(index, new densify_options_1.DensifyOptions());
        case 'SegmentSumOptions': return accessor(index, new segment_sum_options_1.SegmentSumOptions());
        case 'BatchMatMulOptions': return accessor(index, new batch_mat_mul_options_1.BatchMatMulOptions());
        case 'BCQGatherOptions': return accessor(index, new b_c_q_gather_options_1.BCQGatherOptions());
        case 'BCQFullyConnectedOptions': return accessor(index, new b_c_q_fully_connected_options_1.BCQFullyConnectedOptions());
        case 'InstanceNormOptions': return accessor(index, new instance_norm_options_1.InstanceNormOptions());
        default: return null;
    }
}
exports.unionListToBuiltinOptions = unionListToBuiltinOptions;
