"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.MirrorPadOptions = void 0;
var flatbuffers = require("flatbuffers");
var mirror_pad_mode_1 = require("../circle/mirror-pad-mode");
var MirrorPadOptions = /** @class */ (function () {
    function MirrorPadOptions() {
        this.bb = null;
        this.bb_pos = 0;
    }
    MirrorPadOptions.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    MirrorPadOptions.getRootAsMirrorPadOptions = function (bb, obj) {
        return (obj || new MirrorPadOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    MirrorPadOptions.getSizePrefixedRootAsMirrorPadOptions = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new MirrorPadOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    MirrorPadOptions.prototype.mode = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : mirror_pad_mode_1.MirrorPadMode.REFLECT;
    };
    MirrorPadOptions.startMirrorPadOptions = function (builder) {
        builder.startObject(1);
    };
    MirrorPadOptions.addMode = function (builder, mode) {
        builder.addFieldInt8(0, mode, mirror_pad_mode_1.MirrorPadMode.REFLECT);
    };
    MirrorPadOptions.endMirrorPadOptions = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    MirrorPadOptions.createMirrorPadOptions = function (builder, mode) {
        MirrorPadOptions.startMirrorPadOptions(builder);
        MirrorPadOptions.addMode(builder, mode);
        return MirrorPadOptions.endMirrorPadOptions(builder);
    };
    return MirrorPadOptions;
}());
exports.MirrorPadOptions = MirrorPadOptions;
