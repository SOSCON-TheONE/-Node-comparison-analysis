"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.LSHProjectionOptions = void 0;
var flatbuffers = require("flatbuffers");
var l_s_h_projection_type_1 = require("../circle/l-s-h-projection-type");
var LSHProjectionOptions = /** @class */ (function () {
    function LSHProjectionOptions() {
        this.bb = null;
        this.bb_pos = 0;
    }
    LSHProjectionOptions.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    LSHProjectionOptions.getRootAsLSHProjectionOptions = function (bb, obj) {
        return (obj || new LSHProjectionOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    LSHProjectionOptions.getSizePrefixedRootAsLSHProjectionOptions = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new LSHProjectionOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    LSHProjectionOptions.prototype.type = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : l_s_h_projection_type_1.LSHProjectionType.UNKNOWN;
    };
    LSHProjectionOptions.startLSHProjectionOptions = function (builder) {
        builder.startObject(1);
    };
    LSHProjectionOptions.addType = function (builder, type) {
        builder.addFieldInt8(0, type, l_s_h_projection_type_1.LSHProjectionType.UNKNOWN);
    };
    LSHProjectionOptions.endLSHProjectionOptions = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    LSHProjectionOptions.createLSHProjectionOptions = function (builder, type) {
        LSHProjectionOptions.startLSHProjectionOptions(builder);
        LSHProjectionOptions.addType(builder, type);
        return LSHProjectionOptions.endLSHProjectionOptions(builder);
    };
    return LSHProjectionOptions;
}());
exports.LSHProjectionOptions = LSHProjectionOptions;
