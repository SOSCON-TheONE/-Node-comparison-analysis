"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.LocalResponseNormalizationOptions = void 0;
var flatbuffers = require("flatbuffers");
var LocalResponseNormalizationOptions = /** @class */ (function () {
    function LocalResponseNormalizationOptions() {
        this.bb = null;
        this.bb_pos = 0;
    }
    LocalResponseNormalizationOptions.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    LocalResponseNormalizationOptions.getRootAsLocalResponseNormalizationOptions = function (bb, obj) {
        return (obj || new LocalResponseNormalizationOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    LocalResponseNormalizationOptions.getSizePrefixedRootAsLocalResponseNormalizationOptions = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new LocalResponseNormalizationOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    LocalResponseNormalizationOptions.prototype.radius = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    LocalResponseNormalizationOptions.prototype.bias = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    LocalResponseNormalizationOptions.prototype.alpha = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    LocalResponseNormalizationOptions.prototype.beta = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    LocalResponseNormalizationOptions.startLocalResponseNormalizationOptions = function (builder) {
        builder.startObject(4);
    };
    LocalResponseNormalizationOptions.addRadius = function (builder, radius) {
        builder.addFieldInt32(0, radius, 0);
    };
    LocalResponseNormalizationOptions.addBias = function (builder, bias) {
        builder.addFieldFloat32(1, bias, 0.0);
    };
    LocalResponseNormalizationOptions.addAlpha = function (builder, alpha) {
        builder.addFieldFloat32(2, alpha, 0.0);
    };
    LocalResponseNormalizationOptions.addBeta = function (builder, beta) {
        builder.addFieldFloat32(3, beta, 0.0);
    };
    LocalResponseNormalizationOptions.endLocalResponseNormalizationOptions = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    LocalResponseNormalizationOptions.createLocalResponseNormalizationOptions = function (builder, radius, bias, alpha, beta) {
        LocalResponseNormalizationOptions.startLocalResponseNormalizationOptions(builder);
        LocalResponseNormalizationOptions.addRadius(builder, radius);
        LocalResponseNormalizationOptions.addBias(builder, bias);
        LocalResponseNormalizationOptions.addAlpha(builder, alpha);
        LocalResponseNormalizationOptions.addBeta(builder, beta);
        return LocalResponseNormalizationOptions.endLocalResponseNormalizationOptions(builder);
    };
    return LocalResponseNormalizationOptions;
}());
exports.LocalResponseNormalizationOptions = LocalResponseNormalizationOptions;
