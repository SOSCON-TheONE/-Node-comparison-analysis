"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.ConcatenationOptions = void 0;
var flatbuffers = require("flatbuffers");
var activation_function_type_1 = require("../circle/activation-function-type");
var ConcatenationOptions = /** @class */ (function () {
    function ConcatenationOptions() {
        this.bb = null;
        this.bb_pos = 0;
    }
    ConcatenationOptions.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    ConcatenationOptions.getRootAsConcatenationOptions = function (bb, obj) {
        return (obj || new ConcatenationOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    ConcatenationOptions.getSizePrefixedRootAsConcatenationOptions = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ConcatenationOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    ConcatenationOptions.prototype.axis = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    ConcatenationOptions.prototype.fusedActivationFunction = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : activation_function_type_1.ActivationFunctionType.NONE;
    };
    ConcatenationOptions.startConcatenationOptions = function (builder) {
        builder.startObject(2);
    };
    ConcatenationOptions.addAxis = function (builder, axis) {
        builder.addFieldInt32(0, axis, 0);
    };
    ConcatenationOptions.addFusedActivationFunction = function (builder, fusedActivationFunction) {
        builder.addFieldInt8(1, fusedActivationFunction, activation_function_type_1.ActivationFunctionType.NONE);
    };
    ConcatenationOptions.endConcatenationOptions = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    ConcatenationOptions.createConcatenationOptions = function (builder, axis, fusedActivationFunction) {
        ConcatenationOptions.startConcatenationOptions(builder);
        ConcatenationOptions.addAxis(builder, axis);
        ConcatenationOptions.addFusedActivationFunction(builder, fusedActivationFunction);
        return ConcatenationOptions.endConcatenationOptions(builder);
    };
    return ConcatenationOptions;
}());
exports.ConcatenationOptions = ConcatenationOptions;
