"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.EmbeddingLookupSparseOptions = void 0;
var flatbuffers = require("flatbuffers");
var combiner_type_1 = require("../circle/combiner-type");
var EmbeddingLookupSparseOptions = /** @class */ (function () {
    function EmbeddingLookupSparseOptions() {
        this.bb = null;
        this.bb_pos = 0;
    }
    EmbeddingLookupSparseOptions.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    EmbeddingLookupSparseOptions.getRootAsEmbeddingLookupSparseOptions = function (bb, obj) {
        return (obj || new EmbeddingLookupSparseOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    EmbeddingLookupSparseOptions.getSizePrefixedRootAsEmbeddingLookupSparseOptions = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new EmbeddingLookupSparseOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    EmbeddingLookupSparseOptions.prototype.combiner = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : combiner_type_1.CombinerType.SUM;
    };
    EmbeddingLookupSparseOptions.startEmbeddingLookupSparseOptions = function (builder) {
        builder.startObject(1);
    };
    EmbeddingLookupSparseOptions.addCombiner = function (builder, combiner) {
        builder.addFieldInt8(0, combiner, combiner_type_1.CombinerType.SUM);
    };
    EmbeddingLookupSparseOptions.endEmbeddingLookupSparseOptions = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    EmbeddingLookupSparseOptions.createEmbeddingLookupSparseOptions = function (builder, combiner) {
        EmbeddingLookupSparseOptions.startEmbeddingLookupSparseOptions(builder);
        EmbeddingLookupSparseOptions.addCombiner(builder, combiner);
        return EmbeddingLookupSparseOptions.endEmbeddingLookupSparseOptions(builder);
    };
    return EmbeddingLookupSparseOptions;
}());
exports.EmbeddingLookupSparseOptions = EmbeddingLookupSparseOptions;
