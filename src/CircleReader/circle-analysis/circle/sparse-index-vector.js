"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.unionListToSparseIndexVector = exports.unionToSparseIndexVector = exports.SparseIndexVector = void 0;
var int32_vector_1 = require("../circle/int32-vector");
var uint16_vector_1 = require("../circle/uint16-vector");
var uint8_vector_1 = require("../circle/uint8-vector");
var SparseIndexVector;
(function (SparseIndexVector) {
    SparseIndexVector[SparseIndexVector["NONE"] = 0] = "NONE";
    SparseIndexVector[SparseIndexVector["Int32Vector"] = 1] = "Int32Vector";
    SparseIndexVector[SparseIndexVector["Uint16Vector"] = 2] = "Uint16Vector";
    SparseIndexVector[SparseIndexVector["Uint8Vector"] = 3] = "Uint8Vector";
})(SparseIndexVector = exports.SparseIndexVector || (exports.SparseIndexVector = {}));
function unionToSparseIndexVector(type, accessor) {
    switch (SparseIndexVector[type]) {
        case 'NONE': return null;
        case 'Int32Vector': return accessor(new int32_vector_1.Int32Vector());
        case 'Uint16Vector': return accessor(new uint16_vector_1.Uint16Vector());
        case 'Uint8Vector': return accessor(new uint8_vector_1.Uint8Vector());
        default: return null;
    }
}
exports.unionToSparseIndexVector = unionToSparseIndexVector;
function unionListToSparseIndexVector(type, accessor, index) {
    switch (SparseIndexVector[type]) {
        case 'NONE': return null;
        case 'Int32Vector': return accessor(index, new int32_vector_1.Int32Vector());
        case 'Uint16Vector': return accessor(index, new uint16_vector_1.Uint16Vector());
        case 'Uint8Vector': return accessor(index, new uint8_vector_1.Uint8Vector());
        default: return null;
    }
}
exports.unionListToSparseIndexVector = unionListToSparseIndexVector;
