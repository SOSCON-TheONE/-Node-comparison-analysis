"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.BatchMatMulOptions = void 0;
var flatbuffers = require("flatbuffers");
var BatchMatMulOptions = /** @class */ (function () {
    function BatchMatMulOptions() {
        this.bb = null;
        this.bb_pos = 0;
    }
    BatchMatMulOptions.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    BatchMatMulOptions.getRootAsBatchMatMulOptions = function (bb, obj) {
        return (obj || new BatchMatMulOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    BatchMatMulOptions.getSizePrefixedRootAsBatchMatMulOptions = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new BatchMatMulOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    BatchMatMulOptions.prototype.adjointLhs = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
    };
    BatchMatMulOptions.prototype.adjointRhs = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
    };
    BatchMatMulOptions.startBatchMatMulOptions = function (builder) {
        builder.startObject(2);
    };
    BatchMatMulOptions.addAdjointLhs = function (builder, adjointLhs) {
        builder.addFieldInt8(0, +adjointLhs, +false);
    };
    BatchMatMulOptions.addAdjointRhs = function (builder, adjointRhs) {
        builder.addFieldInt8(1, +adjointRhs, +false);
    };
    BatchMatMulOptions.endBatchMatMulOptions = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    BatchMatMulOptions.createBatchMatMulOptions = function (builder, adjointLhs, adjointRhs) {
        BatchMatMulOptions.startBatchMatMulOptions(builder);
        BatchMatMulOptions.addAdjointLhs(builder, adjointLhs);
        BatchMatMulOptions.addAdjointRhs(builder, adjointRhs);
        return BatchMatMulOptions.endBatchMatMulOptions(builder);
    };
    return BatchMatMulOptions;
}());
exports.BatchMatMulOptions = BatchMatMulOptions;
