"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.ArgMinOptions = void 0;
var flatbuffers = require("flatbuffers");
var tensor_type_1 = require("../circle/tensor-type");
var ArgMinOptions = /** @class */ (function () {
    function ArgMinOptions() {
        this.bb = null;
        this.bb_pos = 0;
    }
    ArgMinOptions.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    ArgMinOptions.getRootAsArgMinOptions = function (bb, obj) {
        return (obj || new ArgMinOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    ArgMinOptions.getSizePrefixedRootAsArgMinOptions = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ArgMinOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    ArgMinOptions.prototype.outputType = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : tensor_type_1.TensorType.FLOAT32;
    };
    ArgMinOptions.startArgMinOptions = function (builder) {
        builder.startObject(1);
    };
    ArgMinOptions.addOutputType = function (builder, outputType) {
        builder.addFieldInt8(0, outputType, tensor_type_1.TensorType.FLOAT32);
    };
    ArgMinOptions.endArgMinOptions = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    ArgMinOptions.createArgMinOptions = function (builder, outputType) {
        ArgMinOptions.startArgMinOptions(builder);
        ArgMinOptions.addOutputType(builder, outputType);
        return ArgMinOptions.endArgMinOptions(builder);
    };
    return ArgMinOptions;
}());
exports.ArgMinOptions = ArgMinOptions;
