"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReshapeOptions = void 0;
var flatbuffers = __importStar(require("flatbuffers"));
var ReshapeOptions = /** @class */ (function () {
    function ReshapeOptions() {
        this.bb = null;
        this.bb_pos = 0;
    }
    ReshapeOptions.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    ReshapeOptions.getRootAsReshapeOptions = function (bb, obj) {
        return (obj || new ReshapeOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    ReshapeOptions.getSizePrefixedRootAsReshapeOptions = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ReshapeOptions()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    ReshapeOptions.prototype.newShape = function (index) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
    };
    ReshapeOptions.prototype.newShapeLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    ReshapeOptions.prototype.newShapeArray = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? new Int32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
    };
    ReshapeOptions.startReshapeOptions = function (builder) {
        builder.startObject(1);
    };
    ReshapeOptions.addNewShape = function (builder, newShapeOffset) {
        builder.addFieldOffset(0, newShapeOffset, 0);
    };
    ReshapeOptions.createNewShapeVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addInt32(data[i]);
        }
        return builder.endVector();
    };
    ReshapeOptions.startNewShapeVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    ReshapeOptions.endReshapeOptions = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    ReshapeOptions.createReshapeOptions = function (builder, newShapeOffset) {
        ReshapeOptions.startReshapeOptions(builder);
        ReshapeOptions.addNewShape(builder, newShapeOffset);
        return ReshapeOptions.endReshapeOptions(builder);
    };
    return ReshapeOptions;
}());
exports.ReshapeOptions = ReshapeOptions;
